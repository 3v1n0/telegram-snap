diff --git a/src/platformsupport/dbustray/qdbustrayicon.cpp b/src/platformsupport/dbustray/qdbustrayicon.cpp
index 4d6e707..50d5867 100644
--- a/src/platformsupport/dbustray/qdbustrayicon.cpp
+++ b/src/platformsupport/dbustray/qdbustrayicon.cpp
@@ -58,9 +58,18 @@ QT_BEGIN_NAMESPACE
 
 Q_LOGGING_CATEGORY(qLcTray, "qt.qpa.tray")
 
+static QString cachePath()
+{
+    QString xdgCache = QString::fromUtf8(getenv("XDG_CACHE_HOME"));
+    if (xdgCache.isEmpty()) {
+        xdgCache = QDir::cleanPath(QDir::homePath() + QStringLiteral("/.cache"));
+    }
+    return xdgCache;
+}
+
 static const QString KDEItemFormat = QStringLiteral("org.kde.StatusNotifierItem-%1-%2");
 static const QString KDEWatcherService = QStringLiteral("org.kde.StatusNotifierWatcher");
-static const QString TempFileTemplate =  QDir::tempPath() + QStringLiteral("/qt-trayicon-XXXXXX.png");
+static const QString TempFileTemplate = cachePath() + QStringLiteral("/qt-trayicon-XXXXXX.png");
 static const QString XdgNotificationService = QStringLiteral("org.freedesktop.Notifications");
 static const QString XdgNotificationPath = QStringLiteral("/org/freedesktop/Notifications");
 static const QString DefaultAction = QStringLiteral("default");
@@ -151,6 +160,10 @@ QTemporaryFile *QDBusTrayIcon::tempIcon(const QIcon &icon)
         uint pid = session.interface()->servicePid(KDEWatcherService).value();
         QString processName = QLockFilePrivate::processNameByPid(pid);
         necessary = processName.endsWith(QStringLiteral("indicator-application-service"));
+        if (!necessary) {
+            QString xdgDesktop = QString::fromUtf8(getenv("XDG_CURRENT_DESKTOP"));
+            necessary = xdgDesktop.toLower().split(QLatin1Char(':')).contains(QStringLiteral("unity"));
+        }
         necessity_checked = true;
     }
     if (!necessary)
